package collabo.wato.springboot.web.divideskill;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import collabo.wato.springboot.web.board.service.BoardService;
import collabo.wato.springboot.web.divideskill.service.DivideService;
import collabo.wato.springboot.web.divideskill.vo.DivideVO;
import collabo.wato.springboot.web.member.service.MemberService;
import collabo.wato.springboot.web.member.vo.MemberVO;

@Controller
public class DivideController {
	
	@Autowired
	DivideService service;
	
	@Autowired
	BoardService boardService;
	@Autowired
	MemberService memberService;
	 
	// 메인페이지로 가는 controller
	@RequestMapping("/divide")
	public String main(HttpServletRequest request, HttpServletResponse response, DivideVO vo) throws Exception {
		
		//String param = request.getParameter("param");
		//vo.setCs_func_id(param);
		
		List<DivideVO> list = service.selectDivide(vo);
		
		request.setAttribute("list", list);
		
		return "/main/divide_skill/divide_skill_main";
		
	}

	@RequestMapping("/divide/insert")
	public String insert(HttpServletRequest request, HttpServletResponse response, DivideVO vo) throws Exception {
		
		return "/main/divide_skill/divideInsert";
	}
	
	// 기능 등록할때 쓰이는 controller
	@RequestMapping("/insertDivide")
	public String insert(HttpServletRequest request, HttpServletResponse response, MultipartFile files) throws Exception {
		
		String dvTitle = request.getParameter("dvTitle");
		String dvUrl = request.getParameter("dvUrl");
		String dvImg = request.getParameter("dvImg");
		String dvDetail = request.getParameter("dvDetail");
		String dvUser = request.getParameter("dvUser");
		String own = request.getParameter("own");
		
		
		System.out.println("이미지 파일 파라미터 >>" + dvImg);
		
		SimpleDateFormat sdf = new SimpleDateFormat ( "yyyyMMdd");
		String time = sdf.format (System.currentTimeMillis());
		String fileName = (UUID.randomUUID().toString() + time).replace("-", "") + ".jpg";
		File file = new File("C:\\divide\\img\\" + fileName);
		files.transferTo(file);
		
		System.out.println("이미지파일 >> " + fileName);
		
		
		DivideVO vo = new DivideVO();
		
		vo.setTitle(dvTitle);
		vo.setUrl(dvUrl);
		vo.setFilepath(fileName);
		vo.setDetail(dvDetail);
		vo.setCreate_user(dvUser);
		vo.setOwn(own);
		
		service.insertDivide(vo);
		
		return "/main/divide_skill/divideInsert";
	}
	
	@RequestMapping("/urlLocation")
	public String urlLocation(HttpServletRequest request, HttpServletResponse response) {
		String page = request.getParameter("param");
		if("kakao".equals(page)) {
			return "/main/divide_skill/divide_login";
		}
		else if("join".equals(page)){
			return "/main/divide_skill/divideJoin";
		}else {
			
		}
		return null;
		
	}
	
	@RequestMapping("/divide/login")
	public String login(HttpServletRequest request, HttpServletResponse response) {
		
		return "/main/divide_skill/login/divideLogin";
	}
	
	@RequestMapping("/divide/loginLogic")
	public String loginLogic(HttpServletRequest request, HttpServletResponse response,HttpSession httpSession ,MemberVO mvo) throws Exception {
		DivideVO vo = new DivideVO();
		
		String email = request.getParameter("email");
		String pw = request.getParameter("password");
		
		mvo.setEmail(email);
			
		List<MemberVO> loginVo = memberService.getMember(mvo);						 				
		httpSession.setAttribute("loginVo", loginVo.get(0));
		 	 
		return"forward:/divide";
	}
	
	@RequestMapping("/logout")
	public String logout(HttpServletRequest request, HttpServletResponse response, HttpSession httpSession)throws Exception{
		httpSession.invalidate();
		return "redirect:/divide";
		
	}
	
	// mypage 페이지로 이동하는 controller
	@RequestMapping("/mypage")
	public String mypage(HttpServletRequest request, HttpServletResponse response, DivideVO vo)throws Exception {
		String nickname = request.getParameter("nickname");
		
		vo.setNickname(nickname);
		List<DivideVO> myList = service.selectDivide(vo);
		
		request.setAttribute("myList", myList);
		
		return "/main/divide_skill/mypage/mypage";
	}
	
	// 기능게시글 삭제
	@RequestMapping("/delete")
	public String delete(HttpServletRequest request, HttpServletResponse response, DivideVO vo) throws Exception{
		String cs_func_id = request.getParameter("cs_func_id");
		
		vo.setCs_func_id(cs_func_id);
		service.deleteDivide(vo);
					
		return "/main/divide_skill/mypage/mypage";
	}
	
	// 수정페이지로 가는 controller
	@RequestMapping("/divideUp")
	public String divideup(HttpServletRequest request, HttpServletResponse response, DivideVO vo) throws Exception {
		String cs_func_id = request.getParameter("cs_func_id");
		
		vo.setCs_func_id(cs_func_id);
		
		List<DivideVO> ChList = service.selectDivide(vo);
					
		request.setAttribute("ChList", ChList.get(0));
		
		return "/main/divide_skill/mypage/mypageUpdate";
	}
	
	// 기능등록 게시글을 수정을 하는 로직 controller
	@RequestMapping("/divideUp/logic")
	public String updateLogic(HttpServletRequest request, HttpServletResponse response, MultipartFile files, DivideVO vo) throws Exception{
		String cs_func_id = request.getParameter("cs_func_id");
		String nickname = request.getParameter("nickname");
		String title = request.getParameter("title");	
		String detail = request.getParameter("detail");
		String url = request.getParameter("url");
		
		String fileName = request.getParameter("upimg");
		
		
		 if(!files.isEmpty()) {
			 //파일이 있으면
			 //기존 파일 삭제
			 System.out.println("기존 파일명 : " + fileName);
			 File file = new File("C:\\divide\\img\\" + fileName);
			 if(file.exists()) {
				 System.out.println("나(" + fileName + ") 있어요!");
				 System.out.println(file.getPath());
				 file.setWritable(true);
				 boolean isDelete = file.delete();
				 System.err.println("너 지워졌니 ? : " + isDelete);
			 }
			 
			 //대체 파일 생성
			 SimpleDateFormat sdf = new SimpleDateFormat ( "yyyyMMdd");
			 String time = sdf.format (System.currentTimeMillis());
			 String updateimg  = (UUID.randomUUID().toString() + time).replace("-", "") + ".jpg";
			 File updateFile = new File("C:\\divide\\img\\" + updateimg);
			 System.out.println("대체 파일명 : " + updateimg);
			 files.transferTo(updateFile);
			 
			 vo.setFilepath(updateimg);
			 vo.setCs_func_id(cs_func_id);
		 }
		System.out.println("여기까지 왓니???");
		 	service.updateDivide(vo);
		 	request.setAttribute("nickname", nickname);
		 	
		return "forward:/mypage";
	}
	
	
	@RequestMapping("/editor")
	public String editor(HttpServletRequest request, HttpServletResponse response, DivideVO vo) throws Exception {
		String cs_func_id = request.getParameter("cs_func_id");
			
		System.out.println("cs_func_id >>" + cs_func_id);
		vo.setCs_func_id(cs_func_id);
		
		List<DivideVO> editorList = service.selectDivideMirror(vo);
		
			request.setAttribute("editorList", editorList.get(0));
			
			
		return "/main/divide_skill/mypage/mypageEditor";
	}			
	
	// 코드 등록
	@RequestMapping("/divide/upsertDivideMirror")
	public String upsert(HttpServletRequest request, HttpServletResponse response, MultipartFile files, @ModelAttribute DivideVO vo) throws Exception {
    	
//		Enumeration enumeration = request.getParameterNames();
//    	while (enumeration.hasMoreElements()) {
//    	String key = (String) enumeration.nextElement();
//    	String value = request.getParameter(key);
//    		System.out.println(">>> " + key + " : " + value);
//    	}
    		
		service.upsertDivideMirror(vo);
		
		return "/main/divide_skill/divideInsert";
	}
	
	
}
